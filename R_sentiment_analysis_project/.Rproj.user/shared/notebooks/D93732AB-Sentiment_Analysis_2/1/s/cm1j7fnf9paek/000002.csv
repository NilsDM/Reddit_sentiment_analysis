"0",""
"0","# Sentiment score of a given comment"
"0","calculate_sentiment_score <- function(comment){"
"0","    comment <- gsub(""[\r\n]"","" "", comment)"
"0","    comment <- gsub(""[\r\n\n]"","""", comment)"
"0","    comment <- str_replace_all(comment, ""[^[:alnum:]]"", "" "")"
"0","    sd <- get_nrc_sentiment(comment)"
"0","    num_score <- (sd$positive - sd$negative) / (sd$positive + sd$negative)"
"0","    return(round(num_score, 3))"
"0","}"
"0",""
"0",""
"0","# Bins a given sentiment score into 5 discrete bins"
"0","sentiment_bin <- function(s){"
"0","    if(-1 <= s & s <= -.5){"
"0","    }"
"0","    "
"0","    if(-.5 < s & s < -.1){"
"0","    }"
"0","    "
"0","    if(-.1 <= s & s <= .1){"
"0","        return(""Neutral"")"
"0","    }"
"0","        return(""Pos-Neutral"")"
"0","    }"
"0","    "
"0","    if(.5 <= s & s <= 1){"
"0","}"
"0",""
"0","# Sample comment from given data frame and returns all attributes as a vector"
"0","sample_comments_and_sentiment_analysis <- function(df){"
"0","    # comment <- """" "
"0","    comment_score <- NaN"
"0","    while(is.nan(comment_score)){"
"0","        comment_score <- calculate_sentiment_score(comment)"
"0","    }"
"0","    result = c(sample_row$subreddit, "
"0","               sample_row$post_name,"
"0","               #sample_row$num_comments,"
"0","               sample_row$karma,"
"0","               sample_row$comment_karma,"
"0","               comment_score,"
"0","               sample_row$id_tag)"
"0",""
"0","# Calculates the average karma score for a given post"
"0","# Useful for determining threshold above which comments are considered valid"
"0","calculate_median_karma_score <- function(df, sub, post){"
"0","    filtered_df <- df %>% "
"0","               post_name == post) %>% "
"0","        mutate(comment_avg = mean(comment_karma), "
"0","           comment_median = median(comment_karma)) %>% "
"0","    filter(comment_karma > comment_median) "
"0","    return(filtered_df)"
"0","    "
"0",""
"0","# Calculates the number of comments in a given post"
"0","calculate_number_of_comments <- function(df){"
"0","        select(subreddit, post_name, comment) %>% "
"0","        group_by(subreddit, post_name) %>% "
"0","        mutate(comment_count = n()) %>% "
"0","        select(subreddit, post_name, comment_count) %>% "
"0","        distinct() "
"0","}"
"0",""
"0","# Separate unique post list into vectorized list separated by subreddit"
"0","vectorize_posts <- function(df, sub){"
"0","    post_names_df <- df %>% "
"0","    filter(subreddit == sub) %>% "
"0","    arrange(desc(comment_count)) %>% "
"0","    select(post_name) %>% "
"0","    return(result_vector)"
"0","    "
"0","}"
"0","construct_master_data_frame <- function(df, post_names_vector, sub){"
"0","    "
"0","    # Filter down df to only those posts within the post_name_vector"
"0","    filter(post_name %in% post_names_vector) %>% "
"0","    select(subreddit, post_name, karma, karma_ratio, "
"0","           comment_author, comment, comment_karma, id_tag)"
"0","    "
"0","                        comment = """", comment_karma = """","
"0","                        comment_score = """",id_tag = """")"
"0",""
"0","    # Number of posts"
"0","    for(j in 1:21){"
"0","            current_df %>%"
"0","            # Filter out all comments that are not above the median karma"
"0","            calculate_median_karma_score(sub, post_names_vector[j])"
"0","     "
"0","        # Number of comment sampled"
"0","        for(k in 1:30){"
"0","            sampled_comment <- sample_comments_and_sentiment_analysis(current_df_2)"
"0","                                     sampled_comment[[4]],"
"0","                                     sampled_comment[[5]],"
"0","                                     sampled_comment[[6]],"
"0","                                     sampled_comment[[8]],"
"0","                                     sampled_comment[[9]])"
"0","            counter = counter + 1"
"0","        }"
"0","    }"
"0","    return(master_df)"
"0","}"
